{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro/hcu/TIL/noovies_clone/screens/Detail/DetailContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi } from \"../../api\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      _ref$route$params = _ref.route.params,\n      isTv = _ref$route$params.isTv,\n      id = _ref$route$params.id,\n      title = _ref$route$params.title,\n      backgroundImage = _ref$route$params.backgroundImage,\n      poster = _ref$route$params.poster,\n      votes = _ref$route$params.votes,\n      overview = _ref$route$params.overview;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    title: title,\n    backgroundImage: backgroundImage,\n    poster: poster,\n    overview: overview,\n    votes: votes\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      movie = _useState4[0],\n      setMovie = _useState4[1];\n\n  var getData = function getData() {\n    var _await$movieApi$movie, _await$movieApi$movie2, getMovie, getMovieError;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(movieApi.movie(id));\n\n          case 2:\n            _await$movieApi$movie = _context.sent;\n            _await$movieApi$movie2 = _slicedToArray(_await$movieApi$movie, 2);\n            getMovie = _await$movieApi$movie2[0];\n            getMovieError = _await$movieApi$movie2[1];\n            setMovie(_objectSpread(_objectSpread({}, getMovie), {}, {\n              title: getMovie.title,\n              backgroundImage: getMovie.backdrop_path,\n              poster: getMovie.poster_path,\n              overview: getMovie.overview,\n              votes: getMovie.vote_average\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, [id]);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      title: title\n    });\n  });\n  return React.createElement(DetailPresenter, {\n    movie: movie,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  });\n});","map":{"version":3,"sources":["/Users/macbookpro/hcu/TIL/noovies_clone/screens/Detail/DetailContainer.js"],"names":["React","useState","useEffect","DetailPresenter","movieApi","navigation","route","params","isTv","id","title","backgroundImage","poster","votes","overview","loading","setLoading","movie","setMovie","getData","getMovie","getMovieError","backdrop_path","poster_path","vote_average","useLayoutEffect","setOptions"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP;AACA,SAASC,QAAT;AACA,gBAAe,gBAKT;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,+BAHJC,KAGI,CAFFC,MAEE;AAAA,MAFQC,IAER,qBAFQA,IAER;AAAA,MAFcC,EAEd,qBAFcA,EAEd;AAAA,MAFkBC,KAElB,qBAFkBA,KAElB;AAAA,MAFyBC,eAEzB,qBAFyBA,eAEzB;AAAA,MAF0CC,MAE1C,qBAF0CA,MAE1C;AAAA,MAFkDC,KAElD,qBAFkDA,KAElD;AAAA,MAFyDC,QAEzD,qBAFyDA,QAEzD;;AAAA,kBAC0Bb,QAAQ,CAAC,IAAD,CADlC;AAAA;AAAA,MACGc,OADH;AAAA,MACYC,UADZ;;AAAA,mBAEsBf,QAAQ,CAAC;AACjCS,IAAAA,KAAK,EAALA,KADiC;AAEjCC,IAAAA,eAAe,EAAfA,eAFiC;AAGjCC,IAAAA,MAAM,EAANA,MAHiC;AAIjCE,IAAAA,QAAQ,EAARA,QAJiC;AAKjCD,IAAAA,KAAK,EAALA;AALiC,GAAD,CAF9B;AAAA;AAAA,MAEGI,KAFH;AAAA,MAEUC,QAFV;;AASJ,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0Bf,QAAQ,CAACa,KAAT,CAAeR,EAAf,CAD1B;;AAAA;AAAA;AAAA;AACPW,YAAAA,QADO;AACGC,YAAAA,aADH;AAEdH,YAAAA,QAAQ,iCACHE,QADG;AAENV,cAAAA,KAAK,EAAEU,QAAQ,CAACV,KAFV;AAGNC,cAAAA,eAAe,EAAES,QAAQ,CAACE,aAHpB;AAINV,cAAAA,MAAM,EAAEQ,QAAQ,CAACG,WAJX;AAKNT,cAAAA,QAAQ,EAAEM,QAAQ,CAACN,QALb;AAMND,cAAAA,KAAK,EAAEO,QAAQ,CAACI;AANV,eAAR;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAYAtB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACV,EAAD,CAFM,CAAT;AAGAT,EAAAA,KAAK,CAACyB,eAAN,CAAsB,YAAM;AAC1BpB,IAAAA,UAAU,CAACqB,UAAX,CAAsB;AAAEhB,MAAAA,KAAK,EAALA;AAAF,KAAtB;AACD,GAFD;AAGA,SAAO,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEO,KAAxB;AAA+B,IAAA,OAAO,EAAEF,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAjCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi } from \"../../api\";\nexport default ({\n  navigation,\n  route: {\n    params: { isTv, id, title, backgroundImage, poster, votes, overview },\n  },\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState({\n    title,\n    backgroundImage,\n    poster,\n    overview,\n    votes,\n  });\n  const getData = async () => {\n    const [getMovie, getMovieError] = await movieApi.movie(id);\n    setMovie({\n      ...getMovie,\n      title: getMovie.title,\n      backgroundImage: getMovie.backdrop_path,\n      poster: getMovie.poster_path,\n      overview: getMovie.overview,\n      votes: getMovie.vote_average,\n    });\n    // setLoading(false);\n  };\n  useEffect(() => {\n    getData();\n  }, [id]);\n  React.useLayoutEffect(() => {\n    navigation.setOptions({ title });\n  });\n  return <DetailPresenter movie={movie} loading={loading} />;\n};\n"]},"metadata":{},"sourceType":"module"}