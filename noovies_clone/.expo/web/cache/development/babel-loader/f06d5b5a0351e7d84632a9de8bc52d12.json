{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/macbookpro/hcu/TIL/noovies_clone/screens/Detail/DetailPresenter.js\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  opacity: 0.8;\\n  font-weight: 500;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 30px;\\n  color: white;\\n  opacity: 0.8;\\n  font-weight: 800;\\n  margin-bottom: 15px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 30px;\\n  padding: 0px 30px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  top: 30px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  font-weight: 600;\\n  font-size: 24px;\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 50%;\\n  margin-left: 40px;\\n  top: 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: \", \"px;\\n  align-items: center;\\n  justify-content: flex-end;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.4;\\n  position: absolute;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styled from \"styled-components/native\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport { apiImage } from \"../../api\";\nimport Poster from \"../../components/poster\";\nimport Votes from \"../../components/Votes\";\nimport { dateLocal } from \"../../utils\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Link from \"../../components/Detail/Link\";\nvar BG = styled.Image(_templateObject());\nvar Header = styled.View(_templateObject2(), Dimensions.get(\"window\").height / 3);\nvar Info = styled.View(_templateObject3());\nvar Title = styled.Text(_templateObject4());\nvar Container = styled.View(_templateObject5());\nvar Data = styled.View(_templateObject6());\nvar DataName = styled.Text(_templateObject7());\nvar DataValue = styled.Text(_templateObject8());\nexport default (function (_ref) {\n  var _result$videos$result;\n\n  var openBrowser = _ref.openBrowser,\n      refreshFn = _ref.refreshFn,\n      result = _ref.result,\n      loading = _ref.loading;\n  return React.createElement(ScrollContainer, {\n    refreshFn: refreshFn,\n    loading: false,\n    contentContainerStyle: {\n      paddingBottom: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(BG, {\n    source: {\n      uri: apiImage(result.backgroundImage, \"-\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Poster, {\n    url: result.poster,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, result.title), result.votes && React.createElement(Votes, {\n    votes: result.votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }\n  })))), React.createElement(Data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, result.overview && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"OverView\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, result.overview)), loading && React.createElement(ActivityIndicator, {\n    style: {\n      marginTop: 30\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), result.spoken_languages && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Languages\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, result.spoken_languages.map(function (l) {\n    return l.name + \" \";\n  }))), result.release_date && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Release\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, dateLocal(result.release_date))), result.status && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"status\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, result.status)), result.runtime && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Runtime\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, result.runtime, \" Minutes\")), result.first_air_date && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"First Air Date\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, dateLocal(result.first_air_date))), result.genres && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Genres\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, result.genres.map(function (g, index) {\n    return index + 1 === result.genres.length ? g.name : g.name + \", \";\n  }))), result.runtime && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Runtime\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, result.runtime, \" Minutes\")), result.number_of_episodes && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Seosons / Episodes\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, result.number_of_seasons, \" / \", result.number_of_episodes)), result.imdb_id && React.createElement(Link, {\n    text: \"IMDB Page\",\n    icon: \"imdb\",\n    onPress: function onPress() {\n      return openBrowser(\"https://www.imdb.com/title/\" + result.imdb_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), ((_result$videos$result = result.videos.result) == null ? void 0 : _result$videos$result.length) > 0 && React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Videos\"), result.videos.results.map(function (video) {\n    return React.createElement(Link, {\n      text: video.name,\n      key: video.id,\n      icon: \"youtube-play\",\n      onPress: function onPress() {\n        return openBrowser(\"https://music.youtube.com/watch?v=\" + video.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    });\n  }))));\n});","map":{"version":3,"sources":["/Users/macbookpro/hcu/TIL/noovies_clone/screens/Detail/DetailPresenter.js"],"names":["React","styled","ScrollContainer","apiImage","Poster","Votes","dateLocal","TouchableOpacity","Link","BG","Image","Header","View","Dimensions","get","height","Info","Title","Text","Container","Data","DataName","DataValue","openBrowser","refreshFn","result","loading","paddingBottom","uri","backgroundImage","poster","title","votes","overview","marginTop","spoken_languages","map","l","name","release_date","status","runtime","first_air_date","genres","g","index","length","number_of_episodes","number_of_seasons","imdb_id","videos","results","video","id","key"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP;AACA,SAASC,QAAT;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,SAASC,SAAT;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,IAAP;AAEA,IAAMC,EAAE,GAAGR,MAAM,CAACS,KAAV,mBAAR;AAOA,IAAMC,MAAM,GAAGV,MAAM,CAACW,IAAV,qBACAC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,CADlC,CAAZ;AAKA,IAAMC,IAAI,GAAGf,MAAM,CAACW,IAAV,oBAAV;AAKA,IAAMK,KAAK,GAAGhB,MAAM,CAACiB,IAAV,oBAAX;AAMA,IAAMC,SAAS,GAAGlB,MAAM,CAACW,IAAV,oBAAf;AAKA,IAAMQ,IAAI,GAAGnB,MAAM,CAACW,IAAV,oBAAV;AAIA,IAAMS,QAAQ,GAAGpB,MAAM,CAACiB,IAAV,oBAAd;AAOA,IAAMI,SAAS,GAAGrB,MAAM,CAACiB,IAAV,oBAAf;AAKA,gBAAe,gBAAiD;AAAA;;AAAA,MAA9CK,WAA8C,QAA9CA,WAA8C;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9D,SACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEF,SADb;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,qBAAqB,EAAE;AAAEG,MAAAA,aAAa,EAAE;AAAjB,KAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEzB,QAAQ,CAACsB,MAAM,CAACI,eAAR,EAAyB,GAAzB;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEJ,MAAM,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,MAAM,CAACM,KAAf,CADF,EAEGN,MAAM,CAACO,KAAP,IAAgB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEP,MAAM,CAACO,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnB,CAFF,CAFF,CALF,EAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACQ,QAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYR,MAAM,CAACQ,QAAnB,CAFF,CAFJ,EAOGP,OAAO,IACN,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE;AAAb,KAA1B;AAA6C,IAAA,KAAK,EAAE,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAWGT,MAAM,CAACU,gBAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MAAM,CAACU,gBAAP,CAAwBC,GAAxB,CAA4B,UAACC,CAAD;AAAA,WAAUA,CAAC,CAACC,IAAZ;AAAA,GAA5B,CADH,CAFF,CAZJ,EAoBGb,MAAM,CAACc,YAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYjC,SAAS,CAACmB,MAAM,CAACc,YAAR,CAArB,CAHF,CArBJ,EA4BGd,MAAM,CAACe,MAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYf,MAAM,CAACe,MAAnB,CAFF,CA7BJ,EAmCGf,MAAM,CAACgB,OAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYhB,MAAM,CAACgB,OAAnB,aAFF,CApCJ,EAyCGhB,MAAM,CAACiB,cAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYpC,SAAS,CAACmB,MAAM,CAACiB,cAAR,CAArB,CAHF,CA1CJ,EAgDGjB,MAAM,CAACkB,MAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,MAAM,CAACkB,MAAP,CAAcP,GAAd,CAAkB,UAACQ,CAAD,EAAIC,KAAJ;AAAA,WACjBA,KAAK,GAAG,CAAR,KAAcpB,MAAM,CAACkB,MAAP,CAAcG,MAA5B,GAAqCF,CAAC,CAACN,IAAvC,GAAiDM,CAAC,CAACN,IAAnD,OADiB;AAAA,GAAlB,CADH,CAFF,CAjDJ,EA0DGb,MAAM,CAACgB,OAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYhB,MAAM,CAACgB,OAAnB,aAFF,CA3DJ,EAgEGhB,MAAM,CAACsB,kBAAP,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,MAAM,CAACuB,iBADV,SACgCvB,MAAM,CAACsB,kBADvC,CAFF,CAjEJ,EAwEGtB,MAAM,CAACwB,OAAP,IACC,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,WADR;AAEE,IAAA,IAAI,EAAE,MAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aACP1B,WAAW,iCAA+BE,MAAM,CAACwB,OAAtC,CADJ;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzEJ,EAiFG,0BAAAxB,MAAM,CAACyB,MAAP,CAAczB,MAAd,2CAAsBqB,MAAtB,IAA+B,CAA/B,IACC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGrB,MAAM,CAACyB,MAAP,CAAcC,OAAd,CAAsBf,GAAtB,CAA0B,UAACgB,KAAD;AAAA,WACzB,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACd,IADd;AAEE,MAAA,GAAG,EAAEc,KAAK,CAACC,EAFb;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,OAAO,EAAE;AAAA,eACP9B,WAAW,wCAAsC6B,KAAK,CAACE,GAA5C,CADJ;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAA1B,CAFH,CAlFJ,CAfF,CADF;AAmHD,CApHD","sourcesContent":["import React from \"react\";\nimport { Dimensions, ActivityIndicator } from \"react-native\";\n\nimport styled from \"styled-components/native\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport { apiImage } from \"../../api\";\nimport Poster from \"../../components/poster\";\nimport Votes from \"../../components/Votes\";\nimport { dateLocal } from \"../../utils\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Link from \"../../components/Detail/Link\";\n\nconst BG = styled.Image`\n  width: 100%;\n  height: 100%;\n  opacity: 0.4;\n  position: absolute;\n`;\n\nconst Header = styled.View`\n  height: ${Dimensions.get(\"window\").height / 3}px;\n  align-items: center;\n  justify-content: flex-end;\n`;\nconst Info = styled.View`\n  width: 50%;\n  margin-left: 40px;\n  top: 20px;\n`;\nconst Title = styled.Text`\n  color: white;\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\nconst Container = styled.View`\n  flex-direction: row;\n  top: 30px;\n`;\n\nconst Data = styled.View`\n  margin-top: 30px;\n  padding: 0px 30px;\n`;\nconst DataName = styled.Text`\n  margin-top: 30px;\n  color: white;\n  opacity: 0.8;\n  font-weight: 800;\n  margin-bottom: 15px;\n`;\nconst DataValue = styled.Text`\n  color: white;\n  opacity: 0.8;\n  font-weight: 500;\n`;\nexport default ({ openBrowser, refreshFn, result, loading }) => {\n  return (\n    <ScrollContainer\n      refreshFn={refreshFn}\n      loading={false}\n      contentContainerStyle={{ paddingBottom: 80 }}\n    >\n      <Header>\n        <BG source={{ uri: apiImage(result.backgroundImage, \"-\") }} />\n        <Container>\n          <Poster url={result.poster} />\n          <Info>\n            <Title>{result.title}</Title>\n            {result.votes && <Votes votes={result.votes} />}\n          </Info>\n        </Container>\n      </Header>\n      <Data>\n        {result.overview && (\n          <>\n            <DataName>OverView</DataName>\n            <DataValue>{result.overview}</DataValue>\n          </>\n        )}\n        {loading && (\n          <ActivityIndicator style={{ marginTop: 30 }} color={\"white\"} />\n        )}\n\n        {result.spoken_languages && (\n          <>\n            <DataName>Languages</DataName>\n            <DataValue>\n              {result.spoken_languages.map((l) => `${l.name} `)}\n            </DataValue>\n          </>\n        )}\n\n        {result.release_date && (\n          <>\n            <DataName>Release</DataName>\n\n            <DataValue>{dateLocal(result.release_date)}</DataValue>\n          </>\n        )}\n\n        {result.status && (\n          <>\n            <DataName>status</DataName>\n            <DataValue>{result.status}</DataValue>\n          </>\n        )}\n\n        {result.runtime && (\n          <>\n            <DataName>Runtime</DataName>\n            <DataValue>{result.runtime} Minutes</DataValue>\n          </>\n        )}\n        {result.first_air_date && (\n          <>\n            <DataName>First Air Date</DataName>\n\n            <DataValue>{dateLocal(result.first_air_date)}</DataValue>\n          </>\n        )}\n        {result.genres && (\n          <>\n            <DataName>Genres</DataName>\n            <DataValue>\n              {result.genres.map((g, index) =>\n                index + 1 === result.genres.length ? g.name : `${g.name}, `\n              )}\n            </DataValue>\n          </>\n        )}\n        {result.runtime && (\n          <>\n            <DataName>Runtime</DataName>\n            <DataValue>{result.runtime} Minutes</DataValue>\n          </>\n        )}\n        {result.number_of_episodes && (\n          <>\n            <DataName>Seosons / Episodes</DataName>\n            <DataValue>\n              {result.number_of_seasons} / {result.number_of_episodes}\n            </DataValue>\n          </>\n        )}\n        {result.imdb_id && (\n          <Link\n            text={\"IMDB Page\"}\n            icon={\"imdb\"}\n            onPress={() =>\n              openBrowser(`https://www.imdb.com/title/${result.imdb_id}`)\n            }\n          />\n        )}\n        {result.videos.result?.length > 0 && (\n          <>\n            <DataName>Videos</DataName>\n            {result.videos.results.map((video) => (\n              <Link\n                text={video.name}\n                key={video.id}\n                icon=\"youtube-play\"\n                onPress={() =>\n                  openBrowser(`https://music.youtube.com/watch?v=${video.key}`)\n                }\n              />\n            ))}\n          </>\n        )}\n      </Data>\n    </ScrollContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}