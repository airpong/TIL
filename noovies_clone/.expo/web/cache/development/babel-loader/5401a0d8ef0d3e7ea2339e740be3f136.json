{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/hcu/TIL/noovies_clone/navigation/Tabs.js\";\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Search from \"../screens/Search\";\nimport favorite from \"../screens/favorite\";\nimport Tv from \"../screens/Tv\";\nimport Movies from \"../screens/Movies\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Tabs = createBottomTabNavigator();\n\nvar getHeaderName = function getHeaderName(route) {\n  var _route$state, _route$state2;\n\n  return ((_route$state = route.state) == null ? void 0 : _route$state.routeNames[(_route$state2 = route.state) == null ? void 0 : _route$state2.index]) || \"Movie\";\n};\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  useLayoutEffect(function () {\n    var name = getHeaderName(route);\n    navigation.setOptions({\n      title: name\n    });\n  }, [route]);\n  return React.createElement(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          var iconName = Platform.OS === \"ios\" ? \"ios-\" : \"md-\";\n\n          if (route.name === \"Movies\") {\n            iconName = iconName + \"film\";\n          } else if (route.name === \"TV\") {\n            iconName = iconName + \"tv\";\n          } else if (route.name === \"Search\") {\n            iconName = iconName + \"search\";\n          } else if (route.name === \"Discovery\") {\n            iconName = iconName + \"heart\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            color: focused ? \"white\" : \"grey\",\n            size: 30,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: \"black\",\n        borderTopColor: \"black\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"Discovery\",\n    component: favorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"TV\",\n    component: Tv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Movies\",\n    component: Movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Search\",\n    component: Search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/macbookpro/hcu/TIL/noovies_clone/navigation/Tabs.js"],"names":["React","useEffect","useLayoutEffect","createBottomTabNavigator","Ionicons","Search","favorite","Tv","Movies","Tabs","getHeaderName","route","state","routeNames","index","navigation","name","setOptions","title","tabBarIcon","focused","iconName","Platform","OS","showLabel","style","backgroundColor","borderTopColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Search from \"../screens/Search\";\nimport favorite from \"../screens/favorite\";\nimport Tv from \"../screens/Tv\";\nimport Movies from \"../screens/Movies\";\nimport { Platform } from \"react-native\";\n\nconst Tabs = createBottomTabNavigator();\nconst getHeaderName = (route) =>\n  route.state?.routeNames[route.state?.index] || \"Movie\";\nexport default ({ navigation, route }) => {\n  useLayoutEffect(() => {\n    const name = getHeaderName(route);\n    navigation.setOptions({\n      title: name,\n    });\n  }, [route]);\n\n  return (\n    <Tabs.Navigator\n      screenOptions={({ route }) => {\n        return {\n          tabBarIcon: ({ focused }) => {\n            let iconName = Platform.OS === \"ios\" ? \"ios-\" : \"md-\";\n            if (route.name === \"Movies\") {\n              iconName = iconName + \"film\";\n            } else if (route.name === \"TV\") {\n              iconName = iconName + \"tv\";\n            } else if (route.name === \"Search\") {\n              iconName = iconName + \"search\";\n            } else if (route.name === \"Discovery\") {\n              iconName = iconName + \"heart\";\n            }\n            return (\n              <Ionicons\n                name={iconName}\n                color={focused ? \"white\" : \"grey\"}\n                size={30}\n              />\n            );\n          },\n        };\n      }}\n      tabBarOptions={{\n        showLabel: false,\n        style: {\n          backgroundColor: \"black\",\n          borderTopColor: \"black\",\n        },\n      }}\n    >\n      <Tabs.Screen name=\"Discovery\" component={favorite} />\n      <Tabs.Screen name=\"TV\" component={Tv} />\n      <Tabs.Screen name=\"Movies\" component={Movies} />\n      <Tabs.Screen name=\"Search\" component={Search} />\n    </Tabs.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}