{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nvar TMDB_KEY = \"f6975886ffe61184df0d21e79ee0aa7d\";\n\nvar makeRequest = function makeRequest(path, params) {\n  return axios.get(\"https://api.themoviedb.org/3\" + path, {\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      api_key: TMDB_KEY\n    })\n  });\n};\n\nvar getAnything = function getAnything(path) {\n  var params,\n      _await$makeRequest,\n      results,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function getAnything$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(makeRequest(path, params));\n\n        case 4:\n          _await$makeRequest = _context.sent;\n          results = _await$makeRequest.data.results;\n          return _context.abrupt(\"return\", [results, null]);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", [null, _context.t0]);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\n\nexport var movieApi = {\n  nowPlaying: function nowPlaying() {\n    return getAnything(\"/movie/now_playing\");\n  },\n  popular: function popular() {\n    return getAnything(\"/movie/popular\");\n  },\n  upcoming: function upcoming() {\n    return getAnything(\"/movie/upcoming\", {\n      region: \"kr\"\n    });\n  },\n  search: function search(query) {\n    return getAnything(\"/search/movie\", {\n      query: query\n    });\n  },\n  movie: function movie(id) {\n    return getAnything(\"/movie/\" + id);\n  },\n  discover: function discover() {\n    return getAnything(\"/discover/movie\");\n  }\n};\nexport var tvApi = {\n  today: function today() {\n    return getAnything(\"/tv/airing_today\");\n  },\n  thisWeek: function thisWeek() {\n    return getAnything(\"/tv/on_the_air\");\n  },\n  topRated: function topRated() {\n    return getAnything(\"/tv/top_rated\");\n  },\n  popular: function popular() {\n    return getAnything(\"/tv/popular\");\n  },\n  search: function search(query) {\n    return getAnything(\"/search/tv\", {\n      query: query\n    });\n  },\n  show: function show(id) {\n    return getAnything(\"tv/\" + id);\n  }\n};\nexport var apiImage = function apiImage(path) {\n  return \"https://image.tmdb.org/t/p/w500\" + path;\n};","map":{"version":3,"sources":["/Users/macbookpro/hcu/TIL/noovies_clone/api.js"],"names":["axios","TMDB_KEY","makeRequest","path","params","get","api_key","getAnything","results","data","movieApi","nowPlaying","popular","upcoming","region","search","query","movie","id","discover","tvApi","today","thisWeek","topRated","show","apiImage"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,kCAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,MAAP;AAAA,SAClBJ,KAAK,CAACK,GAAN,kCAAyCF,IAAzC,EAAiD;AAC/CC,IAAAA,MAAM,kCACDA,MADC;AAEJE,MAAAA,OAAO,EAAEL;AAFL;AADyC,GAAjD,CADkB;AAAA,CAApB;;AAQA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAaC,UAAAA,MAAb,2DAAsB,EAAtB;AAAA;AAAA;AAAA,2CAINF,WAAW,CAACC,IAAD,EAAOC,MAAP,CAJL;;AAAA;AAAA;AAGNI,UAAAA,OAHM,sBAGdC,IAHc,CAGND,OAHM;AAAA,2CAKT,CAACA,OAAD,EAAU,IAAV,CALS;;AAAA;AAAA;AAAA;AAAA,2CAOT,CAAC,IAAD,cAPS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAWA,OAAO,IAAME,QAAQ,GAAG;AACtBC,EAAAA,UAAU,EAAE;AAAA,WAAMJ,WAAW,CAAC,oBAAD,CAAjB;AAAA,GADU;AAEtBK,EAAAA,OAAO,EAAE;AAAA,WAAML,WAAW,CAAC,gBAAD,CAAjB;AAAA,GAFa;AAGtBM,EAAAA,QAAQ,EAAE;AAAA,WAAMN,WAAW,CAAC,iBAAD,EAAoB;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAApB,CAAjB;AAAA,GAHY;AAItBC,EAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,WAAWT,WAAW,CAAC,eAAD,EAAkB;AAAES,MAAAA,KAAK,EAALA;AAAF,KAAlB,CAAtB;AAAA,GAJc;AAKtBC,EAAAA,KAAK,EAAE,eAACC,EAAD;AAAA,WAAQX,WAAW,aAAWW,EAAX,CAAnB;AAAA,GALe;AAMtBC,EAAAA,QAAQ,EAAE;AAAA,WAAMZ,WAAW,CAAC,iBAAD,CAAjB;AAAA;AANY,CAAjB;AASP,OAAO,IAAMa,KAAK,GAAG;AACnBC,EAAAA,KAAK,EAAE;AAAA,WAAMd,WAAW,CAAC,kBAAD,CAAjB;AAAA,GADY;AAEnBe,EAAAA,QAAQ,EAAE;AAAA,WAAMf,WAAW,CAAC,gBAAD,CAAjB;AAAA,GAFS;AAGnBgB,EAAAA,QAAQ,EAAE;AAAA,WAAMhB,WAAW,CAAC,eAAD,CAAjB;AAAA,GAHS;AAInBK,EAAAA,OAAO,EAAE;AAAA,WAAML,WAAW,CAAC,aAAD,CAAjB;AAAA,GAJU;AAKnBQ,EAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,WAAWT,WAAW,CAAC,YAAD,EAAe;AAAES,MAAAA,KAAK,EAALA;AAAF,KAAf,CAAtB;AAAA,GALW;AAMnBQ,EAAAA,IAAI,EAAE,cAACN,EAAD;AAAA,WAAQX,WAAW,SAAOW,EAAP,CAAnB;AAAA;AANa,CAAd;AASP,OAAO,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACtB,IAAD;AAAA,6CAA4CA,IAA5C;AAAA,CAAjB","sourcesContent":["import axios from \"axios\";\n\nconst TMDB_KEY = \"f6975886ffe61184df0d21e79ee0aa7d\";\n\nconst makeRequest = (path, params) =>\n  axios.get(`https://api.themoviedb.org/3${path}`, {\n    params: {\n      ...params,\n      api_key: TMDB_KEY,\n    },\n  });\n\nconst getAnything = async (path, params = {}) => {\n  try {\n    const {\n      data: { results },\n    } = await makeRequest(path, params);\n    return [results, null];\n  } catch (error) {\n    return [null, error];\n  }\n};\n\nexport const movieApi = {\n  nowPlaying: () => getAnything(\"/movie/now_playing\"),\n  popular: () => getAnything(\"/movie/popular\"),\n  upcoming: () => getAnything(\"/movie/upcoming\", { region: \"kr\" }),\n  search: (query) => getAnything(\"/search/movie\", { query }),\n  movie: (id) => getAnything(`/movie/${id}`),\n  discover: () => getAnything(\"/discover/movie\"),\n};\n\nexport const tvApi = {\n  today: () => getAnything(\"/tv/airing_today\"),\n  thisWeek: () => getAnything(\"/tv/on_the_air\"),\n  topRated: () => getAnything(\"/tv/top_rated\"),\n  popular: () => getAnything(\"/tv/popular\"),\n  search: (query) => getAnything(\"/search/tv\", { query }),\n  show: (id) => getAnything(`tv/${id}`),\n};\n\nexport const apiImage = (path) => `https://image.tmdb.org/t/p/w500${path}`;\n"]},"metadata":{},"sourceType":"module"}