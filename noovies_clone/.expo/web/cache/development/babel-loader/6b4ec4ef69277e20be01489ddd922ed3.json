{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/macbookpro/hcu/TIL/noovies_clone/screens/favorite/FavPresenter.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  border-radius: 20px;\\n  width: 100%;\\n  height: 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  top: 80px;\\n  height: \", \"px;\\n  width: 90%;\\n  position: absolute;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding-top: 50px;\\n  flex: 1;\\n  background-color: black;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styled from \"styled-components/native\";\nimport { apiImage } from \"../../api\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n\nvar Container = styled.View(_templateObject());\nvar Card = styled.View(_templateObject2(), HEIGHT / 1.5);\nvar Poster = styled.Image(_templateObject3());\nexport default (function (_ref) {\n  var results = _ref.results;\n  var position = new Animated.ValueXY();\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(evt, _ref2) {\n      var dx = _ref2.dx,\n          dy = _ref2.dy;\n      position.setValue({\n        x: dx,\n        y: dy\n      });\n    }\n  });\n  setInterval(function () {\n    console.log(posistion.getTranslateTransform());\n  }, 2000);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, results.reverse().map(function (result) {\n    return React.createElement(Card, _extends({\n      key: result.id\n    }, panResponder.panHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), React.createElement(Poster, {\n      source: {\n        url: apiImage(result.poster_path)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }));\n  }));\n});","map":{"version":3,"sources":["/Users/macbookpro/hcu/TIL/noovies_clone/screens/favorite/FavPresenter.js"],"names":["React","styled","apiImage","Dimensions","get","WIDTH","width","HEIGHT","height","Container","View","Card","Poster","Image","results","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onPanResponderMove","dx","dy","setValue","x","y","setInterval","console","log","posistion","getTranslateTransform","reverse","map","result","id","panHandlers","url","poster_path"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT;;sBAEyCC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAA1BC,K,mBAAPC,K;IAAsBC,M,mBAARC,M;;AAEtB,IAAMC,SAAS,GAAGR,MAAM,CAACS,IAAV,mBAAf;AAOA,IAAMC,IAAI,GAAGV,MAAM,CAACS,IAAV,qBAEEH,MAAM,GAAG,GAFX,CAAV;AAOA,IAAMK,MAAM,GAAGX,MAAM,CAACY,KAAV,oBAAZ;AAMA,gBAAe,gBAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACC,OAAb,EAAjB;AACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,MAAb,CAAoB;AACvCC,IAAAA,4BAA4B,EAAE,sCAACC,GAAD,EAAMC,YAAN;AAAA,aAAuB,IAAvB;AAAA,KADS;AAEvCC,IAAAA,kBAAkB,EAAE,4BAACF,GAAD,SAAqB;AAAA,UAAbG,EAAa,SAAbA,EAAa;AAAA,UAATC,EAAS,SAATA,EAAS;AACvCX,MAAAA,QAAQ,CAACY,QAAT,CAAkB;AAAEC,QAAAA,CAAC,EAAEH,EAAL;AAASI,QAAAA,CAAC,EAAEH;AAAZ,OAAlB;AACD;AAJsC,GAApB,CAArB;AAMAI,EAAAA,WAAW,CAAC,YAAM;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACC,qBAAV,EAAZ;AACD,GAFU,EAER,IAFQ,CAAX;AAGA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OAAO,CAACqB,OAAR,GAAkBC,GAAlB,CAAsB,UAACC,MAAD;AAAA,WACrB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,MAAM,CAACC;AAAlB,OAA0BpB,YAAY,CAACqB,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEtC,QAAQ,CAACmC,MAAM,CAACI,WAAR;AAAf,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADqB;AAAA,GAAtB,CADH,CADF;AASD,CApBD","sourcesContent":["import React from \"react\";\nimport { PanResponder, Dimensions, Animated } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { apiImage } from \"../../api\";\n\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"window\");\n\nconst Container = styled.View`\n  padding-top: 50px;\n  flex: 1;\n  background-color: black;\n  align-items: center;\n`;\n\nconst Card = styled.View`\n  top: 80px;\n  height: ${HEIGHT / 1.5}px;\n  width: 90%;\n  position: absolute;\n`;\n\nconst Poster = styled.Image`\n  border-radius: 20px;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default ({ results }) => {\n  const position = new Animated.ValueXY();\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: (evt, gestureState) => true,\n    onPanResponderMove: (evt, { dx, dy }) => {\n      position.setValue({ x: dx, y: dy });\n    },\n  });\n  setInterval(() => {\n    console.log(posistion.getTranslateTransform());\n  }, 2000);\n  return (\n    <Container>\n      {results.reverse().map((result) => (\n        <Card key={result.id} {...panResponder.panHandlers}>\n          <Poster source={{ url: apiImage(result.poster_path) }} />\n        </Card>\n      ))}\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}