{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/macbookpro/hcu/TIL/noovies_clone/screens/favorite/FavPresenter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  border-radius: 20px;\\n  width: 100%;\\n  height: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding-top: 50px;\\n  flex: 1;\\n  background-color: black;\\n  align-items: center;\\n  justify-content: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styled from \"styled-components/native\";\nimport { apiImage } from \"../../api\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n\nvar Container = styled.View(_templateObject());\nvar Poster = styled.Image(_templateObject2());\nvar styles = {\n  height: HEIGHT / 1.5,\n  width: \"90%\",\n  position: \"absolute\"\n};\nexport default (function (_ref) {\n  var results = _ref.results;\n\n  var _useState = useState(results),\n      _useState2 = _slicedToArray(_useState, 2),\n      resultsIndex = _useState2[0],\n      setResultIndex = _useState2[1];\n\n  var nextCardd = function nextCardd() {\n    return setResultIndex(function (currentValue) {\n      tmp = value.splice(0, 1);\n      console.log(tmp);\n      value.push(tmp[0]);\n      console.log(value);\n      return value;\n    });\n  };\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      topIndex = _useState4[0],\n      setTopIndex = _useState4[1];\n\n  var nextCard = function nextCard() {\n    return setTopIndex(function (currentValue) {\n      return currentValue + 1;\n    });\n  };\n\n  var position = new Animated.ValueXY();\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(evt, _ref2) {\n      var dx = _ref2.dx,\n          dy = _ref2.dy;\n      position.setValue({\n        x: dx,\n        y: dy\n      });\n    },\n    onPanResponderRelease: function onPanResponderRelease(evt, _ref3) {\n      var dx = _ref3.dx,\n          dy = _ref3.dy;\n\n      if (dx >= 200) {\n        Animated.spring(position, {\n          toValue: {\n            x: WIDTH + 100,\n            y: dy\n          },\n          useNativeDriver: true\n        }).start(nextCardd);\n      } else if (dx <= -200) {\n        Animated.spring(position, {\n          toValue: {\n            x: -WIDTH - 100,\n            y: dy\n          },\n          useNativeDriver: true\n        }).start(nextCardd);\n      } else {\n        Animated.spring(position, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  });\n  var rotationValues = position.x.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [\"-13deg\", \"0deg\", \"13deg\"],\n    extrapolate: \"clamp\"\n  });\n  var secondCardOpacity = position.x.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [1, 0.1, 1],\n    extrapolate: \"clamp\"\n  });\n  var secondCardScale = position.x.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [1, 0.7, 1],\n    extrapolate: \"clamp\"\n  });\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, results.map(function (result, index) {\n    if (index === topIndex) {\n      return React.createElement(Animated.View, _extends({\n        style: _objectSpread(_objectSpread({}, styles), {}, {\n          zIndex: 1,\n          transform: [{\n            rotate: rotationValues\n          }].concat(_toConsumableArray(position.getTranslateTransform()))\n        }),\n        key: result.id\n      }, panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }), React.createElement(Poster, {\n        source: {\n          url: apiImage(result.poster_path)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }));\n    } else if (index === topIndex + 1) {\n      return React.createElement(Animated.View, _extends({\n        style: _objectSpread(_objectSpread({}, styles), {}, {\n          zIndex: -index,\n          opacity: secondCardOpacity,\n          transform: [{\n            scale: secondCardScale\n          }]\n        }),\n        key: result.id\n      }, panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }), React.createElement(Poster, {\n        source: {\n          url: apiImage(result.poster_path)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }));\n    } else {\n      return React.createElement(Animated.View, _extends({\n        style: _objectSpread(_objectSpread({}, styles), {}, {\n          zIndex: -index,\n          opacity: 0\n        }),\n        key: result.id\n      }, panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }), React.createElement(Poster, {\n        source: {\n          url: apiImage(result.poster_path)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }));\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/macbookpro/hcu/TIL/noovies_clone/screens/favorite/FavPresenter.js"],"names":["React","useState","styled","apiImage","Dimensions","get","WIDTH","width","HEIGHT","height","Container","View","Poster","Image","styles","position","results","resultsIndex","setResultIndex","nextCardd","currentValue","tmp","value","splice","console","log","push","topIndex","setTopIndex","nextCard","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onPanResponderMove","dx","dy","setValue","x","y","onPanResponderRelease","spring","toValue","useNativeDriver","start","rotationValues","interpolate","inputRange","outputRange","extrapolate","secondCardOpacity","secondCardScale","map","result","index","zIndex","transform","rotate","getTranslateTransform","id","panHandlers","url","poster_path","opacity","scale"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { PanResponder, Dimensions, Animated } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { apiImage } from \"../../api\";\n\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"window\");\n\nconst Container = styled.View`\n  padding-top: 50px;\n  flex: 1;\n  background-color: black;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Poster = styled.Image`\n  border-radius: 20px;\n  width: 100%;\n  height: 100%;\n`;\nconst styles = {\n  height: HEIGHT / 1.5,\n  width: \"90%\",\n  position: \"absolute\",\n};\nexport default ({ results }) => {\n  const [resultsIndex, setResultIndex] = useState(results);\n  const nextCardd = () =>\n    setResultIndex((currentValue) => {\n      tmp = value.splice(0, 1);\n      console.log(tmp);\n      value.push(tmp[0]);\n      console.log(value);\n      return value;\n    });\n  const [topIndex, setTopIndex] = useState(0);\n  const nextCard = () => setTopIndex((currentValue) => currentValue + 1);\n  const position = new Animated.ValueXY();\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: (evt, gestureState) => true,\n    onPanResponderMove: (evt, { dx, dy }) => {\n      position.setValue({ x: dx, y: dy });\n    },\n    onPanResponderRelease: (evt, { dx, dy }) => {\n      if (dx >= 200) {\n        Animated.spring(position, {\n          toValue: {\n            x: WIDTH + 100,\n            y: dy,\n          },\n          useNativeDriver: true,\n        }).start(nextCardd);\n      } else if (dx <= -200) {\n        Animated.spring(position, {\n          toValue: {\n            x: -WIDTH - 100,\n            y: dy,\n          },\n          useNativeDriver: true,\n        }).start(nextCardd);\n      } else {\n        Animated.spring(position, {\n          toValue: {\n            x: 0,\n            y: 0,\n          },\n          useNativeDriver: true,\n        }).start();\n      }\n    },\n  });\n  const rotationValues = position.x.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [\"-13deg\", \"0deg\", \"13deg\"],\n    extrapolate: \"clamp\",\n  });\n  const secondCardOpacity = position.x.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [1, 0.1, 1],\n    extrapolate: \"clamp\",\n  });\n  const secondCardScale = position.x.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [1, 0.7, 1],\n    extrapolate: \"clamp\",\n  });\n  return (\n    <Container>\n      {results.map((result, index) => {\n        if (index === topIndex) {\n          return (\n            <Animated.View\n              style={{\n                ...styles,\n                zIndex: 1,\n                transform: [\n                  { rotate: rotationValues },\n                  ...position.getTranslateTransform(),\n                ],\n              }}\n              key={result.id}\n              {...panResponder.panHandlers}\n            >\n              <Poster source={{ url: apiImage(result.poster_path) }} />\n            </Animated.View>\n          );\n        } else if (index === topIndex + 1) {\n          return (\n            <Animated.View\n              style={{\n                ...styles,\n                zIndex: -index,\n                opacity: secondCardOpacity,\n                transform: [{ scale: secondCardScale }],\n              }}\n              key={result.id}\n              {...panResponder.panHandlers}\n            >\n              <Poster source={{ url: apiImage(result.poster_path) }} />\n            </Animated.View>\n          );\n        } else {\n          return (\n            <Animated.View\n              style={{\n                ...styles,\n                zIndex: -index,\n                opacity: 0,\n              }}\n              key={result.id}\n              {...panResponder.panHandlers}\n            >\n              <Poster source={{ url: apiImage(result.poster_path) }} />\n            </Animated.View>\n          );\n        }\n      })}\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}